<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[0]=room_speed*global.bomb4_life;
physics_fixture_bind(global.fix1[4],id);
phy_fixed_rotation=1;
//phy_bullet=1;
has_init=1;
solved_col=0;
checkn=0;
checkm=0;
no_deploy=0;
no_score=0;

if(!sp)alarm[1]=global.sv_tck;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(no_deploy==0)
{
if(instance_exists(ign))
{
ign.block_fire=0;
ign.weapon_current=0;
}

if(!instance_exists(shake))instance_create(0,0,shake);

for(i=0;i&lt;global.bomb4_shatter_count;i++)
{
pr5=instance_create(phy_position_x,phy_position_y,bomb4_shatter);
pr5.ign=ign;
pr5.sid=sid;
angle=random(360);
rand=random(global.bomb4_shatter_speed);
pr5.angle=angle;
with(pr5)
    {
    //physics_apply_impulse(phy_com_x,phy_com_y,other.rand*cos(other.angle*pi/180),other.rand*sin(other.angle*pi/180));
    physics_apply_angular_impulse(global.bomb4_shatter_ang_imp);
    }
}
}

if(!sp)//remove object
{
script_execute(net_write_data,6,v_client,id);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>script_execute(net_write_data,5,v_client,14,id,phy_position_x,
phy_position_y);

alarm[1]=global.sv_tck;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(is_ending==0)instance_destroy();


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(solved_col)
{
iddx=noone;
iddx=collision_circle(x,y,global.bomb4_radius,control,true,true);
if(iddx!=noone)
{
if(instance_exists(iddx))with(iddx)instance_destroy();
if(no_score==0)
{
if(iddx==ign)score2[sid]+=global.suicide_score_modif;
else {if(instance_exists(ign))score2[sid]++;else score2[sid]+=global.score_dead;}
}
instance_destroy();
}
}

if(solved_col==0)
{
checkn=x+phy_speed_x/phy_speed*global.chkdist*global.bomb4_radius;
checkm=y+phy_speed_y/phy_speed*global.chkdist*global.bomb4_radius;
if(!instance_exists(ign))
{
solved_col=1;
physics_fixture_bind(global.fix1[4],id);
phy_fixed_rotation=1;
phy_bullet=1;
}
else if(physics_test_overlap(x,y,0,ign)==false)
{
solved_col=1;
physics_fixture_bind(global.fix1[4],id);
phy_fixed_rotation=1;
phy_bullet=1;
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_wall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(solved_col==0)
{
solved_col=1;
physics_fixture_bind(global.fix1[4],id);
phy_fixed_rotation=1;
phy_bullet=1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_colour(c_black);
draw_circle(x,y,global.bomb4_radius,false);
//draw_circle(checkn,checkm,global.projectile0_radius/2,false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>1</PhysicsObjectRestitution>
  <PhysicsObjectGroup>1</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>4,4</point>
    <point>4,0</point>
  </PhysicsShapePoints>
</object>
