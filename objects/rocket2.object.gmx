<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-3</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[0]=room_speed*global.rocket2_life;
physics_fixture_bind(global.fix1[2],id);
phy_fixed_rotation=1;
//phy_bullet=1;
has_init=1;
solved_col=0;
checkn=0;
checkm=0;
angdir=0;
speedup=0;
sii=c_white;
alarm[2]=global.rocket2_speedup_timer*room_speed;
alarm[1]=room_speed*global.rocket2_init_timer;
pf=noone;
globalvar speedf;
globalvar xty;
globalvar xtz;
no_score=0;

if(!sp)alarm[3]=global.sv_tck_prec;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(instance_exists(ign))
{
ign.block_fire=0;
ign.weapon_current=0;
}
if(pf!=noone &amp;&amp; instance_exists(pf))with(pf)instance_destroy();

if(!sp)//remove object
{
script_execute(net_write_data,6,v_client,id);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>script_execute(net_write_data,5,v_client,12,id,phy_position_x,
phy_position_y,0,colour_get_red(sii),colour_get_green(sii),
colour_get_blue(sii));



alarm[3]=global.sv_tck_prec;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>speedup=1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>pf=instance_create(x,y,path_follower);
if(instance_exists(pf))pf.rocket=id;
//phy_linear_damping=5;
speedf=phy_speed;
speedinit=speedf;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(solved_col)
{
iddx=noone;
iddx=collision_circle(x,y,global.rocket2_radius,control,true,true);
if(iddx!=noone)
{
if(instance_exists(iddx))with(iddx)instance_destroy();
if(no_score==0)
{
if(iddx==ign)score2[sid]+=global.suicide_score_modif;
else {if(instance_exists(ign))score2[sid]++;else score2[sid]+=global.score_dead;}
}
instance_destroy();
}
}


if(solved_col==0)
{
if(phy_speed!=0)checkn=x+phy_speed_x/phy_speed*global.chkdist*global.rocket2_radius;
if(phy_speed!=0)checkm=y+phy_speed_y/phy_speed*global.chkdist*global.rocket2_radius;
if(!instance_exists(ign))
{
solved_col=1;
physics_fixture_bind(global.fix1[2],id);
phy_fixed_rotation=1;
phy_bullet=1;
}
else if(physics_test_overlap(x,y,0,ign)==false)
{
solved_col=1;
physics_fixture_bind(global.fix1[2],id);
phy_fixed_rotation=1;
phy_bullet=1;
}
}

if(speedup &amp;&amp; speedf&lt;global.rocket2_speedup_max)
{
speedf+=global.rocket2_speedup_factor;
}


if(pf!=noone &amp;&amp; instance_exists(pf))
{
//phy_speed_x=(distance_to_object(pf))*(pf.x-phy_com_x)*global.rocket2_catch_up;
//phy_speed_y=(distance_to_object(pf))*(pf.y-phy_com_y)*global.rocket2_catch_up;
//physics_apply_impulse(phy_com_x,phy_com_y,(distance_to_object(pf)-5)*(pf.x-phy_com_x)*global.rocket2_catch_up,(distance_to_object(pf)-5)*(pf.y-phy_com_y)*global.rocket2_catch_up);
xty=arctan2(phy_speed_y,phy_speed_x);
xtz=arctan2(pf.y-phy_position_y,pf.x-phy_position_x);
if(angle_difference(xty*180/pi,xtz*180/pi)&gt;global.rocket2_angdiff)angdir=0;
else if(angle_difference(xty*180/pi,xtz*180/pi)&lt;-global.rocket2_angdiff)angdir=1;
if(!angdir)xty-=global.rocket2_catch_up+(speedf-speedinit)*0.1;
else xty+=global.rocket2_catch_up+(speedf-speedinit)*0.1;
phy_speed_x=cos(xty)*speedf;
phy_speed_y=sin(xty)*speedf;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_wall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(solved_col==0)
{
solved_col=1;
physics_fixture_bind(global.fix1[2],id);
phy_fixed_rotation=1;
phy_bullet=1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_colour(c_black);
//draw_circle(x,y,global.rocket2_radius,false);
draw_sprite_ext(rk,0,x,y,1,1,-arctan2(phy_speed_y,phy_speed_x)*180/pi,sii,255);
//draw_circle(checkn,checkm,global.projectile0_radius/2,false);
//draw_sprite_ext(sprite7,0,x,y,1,1,-arctan2(phy_speed_y,phy_speed_x)*180/pi-90,c_white,255);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>2</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>1</PhysicsObjectRestitution>
  <PhysicsObjectGroup>1</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>18,4</point>
    <point>28,10</point>
    <point>18,16</point>
    <point>0,20</point>
  </PhysicsShapePoints>
</object>
